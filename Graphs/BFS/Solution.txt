#include <bits/stdc++.h>
using namespace std;
void addEdge(vector<int>adj[], int u, int v)
{
    adj[u].push_back(v);
    adj[v].push_back(u);
}
void print(vector<int>adj[], int v)
{
    int i,j;
    for(i=0;i<v;i++)
    {
        for(j=0;j<adj[i].size();j++)
        {
            cout<<adj[i][j]<<" ";
        }
        cout<<"\n";
    }
}
void BFS(vector<int> adj[], int v, int s)
{
    bool visited[v+1];
    for(int i=0;i<v;i++)
    visited[i]=false;
    queue<int>q;
    visited[s]=true;
    q.push(s);
    while(q.empty()==false)
    {
        int u=q.front();
        q.pop();
        cout<<u<<" ";
        for(int i : adj[u])
        {
            if(visited[i]==false)
            {
                q.push(i);
                visited[i]=true;

            }
        }
    }
}
int main()
{
    int v,s;
    cout<<"\nEnter the number of vertices";
    cin>>v;
    vector<int> adj[v];
    cout<<"\nEnter source vertex";
    cin>>s;
    addEdge(adj,0,1);
    addEdge(adj,0,2);
    addEdge(adj,1,2);
    addEdge(adj,1,3);
    addEdge(adj,2,3);
    addEdge(adj,2,4);
    addEdge(adj,3,4);
    print(adj,v);
    BFS(adj,v,s);
    return 0;
}
